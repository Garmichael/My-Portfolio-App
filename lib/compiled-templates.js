define(['handlebars'], function(Handlebars) {

this["handlebarsTemplates"] = this["handlebarsTemplates"] || {};

Handlebars.registerPartial("pageContent", this["handlebarsTemplates"]["pageContent"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<section class=\"portfolio-piece\">\r\n    <ul class=\"menu\"></ul>\r\n    <article></article>\r\n</section>";
},"useData":true}));

Handlebars.registerPartial("pageNav", this["handlebarsTemplates"]["pageNav"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "    <li><a href=\""
    + alias2(alias1((depth0 != null ? depth0.link : depth0), depth0))
    + "\" title=\""
    + alias2(alias1((depth0 != null ? depth0.title : depth0), depth0))
    + "\" class=\""
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.isSelected : depth0),{"name":"if","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\" style=\"background-image:url('/content/icons/"
    + alias2(alias1((depth0 != null ? depth0.icon : depth0), depth0))
    + "');\"></a></li>\r\n";
},"2":function(container,depth0,helpers,partials,data) {
    return "selected";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.pieces : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"useData":true}));

Handlebars.registerPartial("portfolioPiece", this["handlebarsTemplates"]["portfolioPiece"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "<h1>"
    + alias2(alias1((depth0 != null ? depth0.title : depth0), depth0))
    + "</h1>\r\n<h2>"
    + alias2(alias1((depth0 != null ? depth0.date : depth0), depth0))
    + "</h2>\r\n<h2>"
    + alias2(alias1((depth0 != null ? depth0.tools : depth0), depth0))
    + "</h2>\r\n\r\n<div class=\"content\">"
    + ((stack1 = alias1((depth0 != null ? depth0.content : depth0), depth0)) != null ? stack1 : "")
    + "</div>";
},"useData":true}));

Handlebars.registerPartial("resume", this["handlebarsTemplates"]["resume"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<section class=\"resume\">\r\n    <h1>Garret Bright</h1>\r\n\r\n    <h2>Skills</h2>\r\n\r\n    <ul>\r\n        <li>General Development</li>\r\n        <li>MVC / MV* Patterns</li>\r\n        <li>Object Oriented Programming</li>\r\n        <li>Clean Code</li>\r\n        <li>Modern IDEs</li>\r\n        <li>Read by Refactoring Techniques</li>\r\n        <li>Agile Development</li>\r\n        <li>Version Control</li>\r\n        <li>Test Driven Development</li>\r\n        <li>Single Web Page Applications</li>\r\n        <li>Code Review Processes</li>\r\n    </ul>\r\n\r\n    <ul>\r\n        <li>Web Development</li>\r\n        <li>PHP</li>\r\n        <li>HTML5</li>\r\n        <li>FreeMarker Template Language</li>\r\n        <li>XML</li>\r\n        <li>CSS3</li>\r\n        <li>LESS / SASS</li>\r\n        <li>Javascript</li>\r\n        <li>JQuery</li>\r\n        <li>JQuery Plugin Development</li>\r\n        <li>BackboneJS</li>\r\n        <li>AngularJS</li>\r\n        <li>NodeJS</li>\r\n        <li>RequireJS</li>\r\n        <li>Handlebars</li>\r\n        <li>Handlebars Helpers</li>\r\n        <li>MySQL</li>\r\n        <li>Java</li>\r\n        <li>QUnit</li>\r\n        <li>Sinon</li>\r\n        <li>Responsive Design</li>\r\n    </ul>\r\n\r\n    <ul>\r\n        <li>Game Development</li>\r\n        <li>Unity 3D in C#</li>\r\n        <li>Unreal Engine</li>\r\n        <li>Actionscript 3</li>\r\n        <li>Level Editors</li>\r\n        <li>Level Scripting</li>\r\n        <li>Game Design Theory</li>\r\n        <li>2D Level Design</li>\r\n        <li>3D Level Design</li>\r\n        <li>Rapid Prototype Development</li>\r\n        <li>Mobile Development</li>\r\n    </ul>\r\n\r\n    <ul>\r\n        <li>Art</li>\r\n        <li>3D Studio Max</li>\r\n        <li>Adobe Photoshop</li>\r\n        <li>Adobe Illustrator</li>\r\n    </ul>\r\n\r\n    <ul>\r\n        <li>Office</li>\r\n        <li>Trello</li>\r\n        <li>Thoughtworks Mingle</li>\r\n        <li>Microsoft Word</li>\r\n        <li>Microsoft Excel</li>\r\n        <li>Microsoft Outlook</li>\r\n    </ul>\r\n\r\n    <h2>Work History</h2>\r\n\r\n    <div class=\"history-item\">\r\n        <h3>Expedia</h3>\r\n        <h4>Software Development Engineer I</h4>\r\n        <h5>June 2014 - Present</h5>\r\n        <p>I develop, maintain, and expand features on the Flight Search Results page. Work that I've done includes modifying existing code for A/B Testing features and functionality, developing front-end platforms and infrastructure, migrating old code to new platforms, developing new features and modules, code reviews, and assisting other developers from my team and other teams in the organization.</p>\r\n    </div>\r\n\r\n    <div class=\"history-item\">\r\n        <h3>Develteam</h3>\r\n        <h4>Software Engineer, Admin, Design</h4>\r\n        <h5>August 2012 - Present</h5>\r\n        <p>I am the sole developer, administrator, and designer of <a data-external-link=\"true\" href=\"//www.develteam.com\">Develteam</a>, a large-scale Social Network for Indie Game Developers. I communicate with users to determine the features they would like to see and study analytics to determine features to develop further or to remove.</p>\r\n    </div>\r\n\r\n    <div class=\"history-item\">\r\n        <h3>Wizards of the Coast</h3>\r\n        <h4>Web Content Producer</h4>\r\n        <h5>May 2008 - July 2012</h5>\r\n        <p>I Published web content for the DailyMTG web magazine and promotional content for other areas of the Wizards of the Coast website using Javascript, CSS, and HTML. Writers and Editors would create content for the webzine and I would convert it into markup and push it to the site.</p>\r\n    </div>\r\n\r\n    <div class=\"history-item\">\r\n        <h3>Nintendo of America</h3>\r\n        <h4>Game Product Tester</h4>\r\n        <h5>July 2008 - February 2010</h5>\r\n        <p>I tested first and third party Nintendo games for hard locks, soft locks, graphic corruption, faulty AI, unintended shortcuts, and other gameplay issues. I reported bugs to the development team and verified bug fixes with new builds.</p>\r\n    </div>\r\n\r\n    <div class=\"history-item\">\r\n        <h3>V-Design / Nintendo Power</h3>\r\n        <h4>Master Gamer</h4>\r\n        <h5>July 2005 - June 2007</h5>\r\n        <p>I Played through and mastered first and third party Nintendo games for use in Nintendo Power Official Strategy Guides. I found the secrets and strategies to give players the edge they needed, as well as took screenshots to accompany copy.</p>\r\n    </div>\r\n\r\n    <h2>Education</h2>\r\n\r\n    <div class=\"history-item\">\r\n        <h3>ITT Technical Institute</h3>\r\n        <h4>Bachelors in Video Game Development, Minor in Multimedia Arts</h4>\r\n        <h5>Fall 2004 - Fall 2008</h5>\r\n    </div>\r\n\r\n    <div class=\"history-item\">\r\n        <h3>ITT Technical Institute</h3>\r\n        <h4>Associates in Computer Science</h4>\r\n        <h5>Fall 1997 - Fall 2000</h5>\r\n    </div>\r\n\r\n</section>";
},"useData":true}));

Handlebars.registerPartial("pieceActionTBS", this["handlebarsTemplates"]["pieceActionTBS"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/ActionTBS.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>ActionTBS</strong> is an experiment to make a Turn Based Strategy Game but without all the windows.</p>\r\n        <p>Each time the player makes a move or performs and action, all of the enemies take their turns. Depending on where the player is in relation to the enemies dictates the enemy's action. In this prototype, there is only one kind of enemy. If the player ends their turn in the same row or column as an Enemy and is within 6 tiles from it, the enemy will fire a projectile at the player. Otherwise, the enemy makes a random move.</p>\r\n        <p>I like this prototype and I'm still coming up with ideas to flesh it out some. My main idea at this moment is to make it a Roguelike.</p>\r\n        <ul>\r\n            <li><a data-external-link=\"true\" href=\"/content/webPlayers/ActionTBS/\">Play in your Browser</a></li>\r\n        </ul>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceBoomerang", this["handlebarsTemplates"]["pieceBoomerang"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/boomerang-preview.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>Project Boomerang</strong> is a Work-in-Progress Side-Scroller Metroidvania that I've been working on between other projects. It's a long term project that I don't expect to have done for another year or two.</p>\r\n        <p>I started building the engine to support easy content generation, and a soft goal is to release the engine on the Unity Asset Store. My end-goal is to have an engine that another developer can use without having to write too much of their own code. For example, the map generation process is entirely built out of XML and given proper file names, the engine can load various configuration and data files to render a map with multiple layers, camera controls, sprites, collisions, tile properties, and parallaxing backrounds.</p>\r\n        <p>The physics engine uses raycasting, and sprite controllers use state machine objects. A developer could write a new state object (or download one that another developer created) and simply attach it to the character controller instance. Each state can access properties of the character controller, such as movement speed, and affect the outcome of the state. The character controller then gets the updated properties from the state and applies them, allowing developers to write primarily input functionality and allow things like collision, gravity, and animations to be taken care of by the controller for them. Cameras work similarly, using states to dictate behaviors such as follow-the-player, autoscroll, and fixed placement.</p>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"content-row\">\r\n    <div class=\"content-block\">\r\n        <p>There is a lot of work still to be done on the engine and lots of features are planned, such as:</p>\r\n        <ul>\r\n            <li>Easy to implement weapons. The developer can set them to be ranged or melee, and choose the melee or projectile type (overhead swing, straight forward attack, cone attack, homing missile, spread shot, etc)</li>\r\n            <li>Background generation with parallaxing</li>\r\n            <li>Various camera controls</li>\r\n            <li>An AI state/trigger machine for enemies</li>\r\n            <li>Pick up items</li>\r\n            <li>Player Stats and Inventory</li>\r\n            <li>Refactoring the BaseController class to allow it to be used for item pick ups, enemies, or whatever else</li>\r\n            <li>Event Triggers</li>\r\n            <li>A Cutscene Engine</li>\r\n            <li>A Path Engine that can be used by cameras, platforms, and other sprites</li>\r\n            <li>A configurable Input Manager</li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"content-block\">\r\n        <p>The current Unity project files can be <a data-external-link=\"true\" href=\"/content/downloads/Boomerang.zip\">downloaded directly</a> or from <a data-external-link=\"true\" href=\"https://github.com/Garmichael/Project-Boomerang\">my GitHub</a></p>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceBoxcars", this["handlebarsTemplates"]["pieceBoxcars"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/boxcars.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>Boxcars</strong> is a Threes/2048 type game where the arrow keys move all tiles at the same time.</p>\r\n        <p>There are four types of tiles, one for each quadrant of a box. Shifting tiles into each other will combine them as long as they don't share any overlapping pieces. Once the player creates a tile with all four pieces, it can be moved into the Furnace in the center of the board.</p>\r\n        <p>When a piece is moved into the Furnace, the rocket burns it like fuel and propels through space. If the player combines two complete tiles, the tile is worth two tiles and will give the rocket more than twice the boost it would have gotten if they were deposited individually. The bigger the stack of fuel that gets deposited, the farther the rocket will propel.</p>\r\n\r\n        <ul>\r\n            <li><a data-external-link=\"true\" href=\"/content/webPlayers/Boxcars/\">Play in your Browser</a></li>\r\n        </ul>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceBuildABadGuyWorkshop", this["handlebarsTemplates"]["pieceBuildABadGuyWorkshop"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/buildABadGuyWorkshopPreview.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>The Build a Bad Guy Workshop</strong> is a write-up that I posted on Gamasutra and Reddit. Both posts were popular and well received by the community and staff. The post on Gamasutra was featured and propagated to the home page, resting at the top big box as a feature for a few days.</p>\r\n        <p>The post is a series of attributes that game designers can mix and match to create enemy behavior for retro games.</p>\r\n\r\n        <ul>\r\n            <li><a data-external-link=\"true\" href=\"http://www.gamasutra.com/blogs/GarretBright/20140422/215978/Build_a_Bad_Guy_Workshop__Designing_enemies_for_retro_games.php\">Gamasutra Blog Post</a></li>\r\n            <li><a data-external-link=\"true\" href=\"https://www.reddit.com/r/gamedev/comments/23oxp6/build_a_bad_guy_workshop_designing_enemies_for/\">Reddit Post on r/gamedev</a></li>\r\n        </ul>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"content-row\">\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/buildABadGuyWorkshopAppPreview.png\"/>\r\n    </div>\r\n    <div class=\"content-block\">\r\n        <p>I also built this <a data-external-link=\"true\" href=\"/content/webPlayers/BadGuyWorkshop/\">interactive web app</a> as a companion piece.</p>\r\n        <p>You can add States and Triggers, and connect them. The app features a random state generator, and has more attributes than the write-ups have listed.</p>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceDevelteamV1", this["handlebarsTemplates"]["pieceDevelteamV1"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n\r\n\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/develteam-v1.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>Develteam</strong> is a large-scale Social Network for Indie Game Developers. The primary goal of the site is to help indie developers find other developers to form teams and make games.</p>\r\n        <p>I built, designed, and maintain this site entirely solo. </p>\r\n        <p>The site has many features, including Facebook-style feeds and posts, up/down voting of content, a message board, detailed profile and account settings, join/managing Devteams and Game Projects, chatrooms, a member-managed game tools section, RSS Feeds for popular game dev news and podcasts, a brainstorming section that functions sort of like a creative version of Stack Overflow, options to browse content and users, and a 'Connect' feature that allows developers to find other developers or game projects based on criteria.</p>\r\n        <p>Users can also join or create Devteams and Game Projects, which function as groups. Members of these groups have access to a private chatroom, a public and private message board, a tasks list maintained by group moderators, and a private file depot.</p>\r\n\r\n        <ul>\r\n            <li><a data-external-link=\"true\" href=\"http://www.develteam.com\">Develteam.com</a></li>\r\n        </ul>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceDevelteamV2", this["handlebarsTemplates"]["pieceDevelteamV2"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/develteam-v2.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>Develteam</strong> has started to show its age visually, so I hired a freelance graphic designer to redesign the site. I started applying the new CSS styles but before long, I realized how unhappy I was with the architecture, so I decided it would be best to rebuild it from the ground up.</p>\r\n        <p>The rebuild project is a NodeJS application using BackboneJS for the front end. All routing is done through Backbone and is a Single Page Application. The NodeJS Server is configured as a RESTful API and all content is loaded dynamically through Backbone's Models, Views, and Collections. I am also using RequireJS to keep everything modularized.</p>\r\n        <p>The project is still in active development and has some way to go before it will be live.</p>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceDontLoseHope", this["handlebarsTemplates"]["pieceDontLoseHope"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/dontLoseHope.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>Don't Lose Hope</strong> is a casual mobile simulator where the player assumes the role of an Indie Game Developer</p>\r\n        <p>The game is meant to be a resource manager with a large dose of dark humor. My goal is to create an experience that other indie game developers will deeply relate with, while non-developers will get a window into the world of indie game development (hopefully spreading some awareness and appreciation for the games they consume).</p>\r\n\r\n        <p>The player starts with no skills, and must click on Icons that represent Programming Skill, Art Skill, and Design Skill to increase their abilities. Each time the player attempts to study a skill, there is a chance to earn a skill point or to lose hope, indicating that they're getting frustrated in spending time to learn but not learning.</p>\r\n        <p>The player can also click on the Web Browser icon to surf the net. Usually, this action just wastes an hour, but they also have a chance to encounter a large number of events that affect their stats. For example, the player may stumble across an article about State Machines and earn some programming skill, or they might find a YouTube video of another indie developer's devlog and lose hope after reading the very critical comments section.</p>\r\n        <p>Hope loss is multiplied by how Lonely, Hungry, and Tired they are. To combat hope loss, the player must form relationships with others, purchase and eat food, and sleep on a regular schedule.</p>\r\n        <p>Relationships are double-edged in that the player must maintain these relationships by engaging in activities with them. For example, having a girlfriend/boyfriend will reduce the player's loneliness, however random events will occur where the player must make a choice between working on their games or spending time with their mate. If the player doesn't get enough done in a certain period of time, they lose hope, but if the player doesn't spend enough time with their mate, they risk that relationship falling apart.</p>\r\n        <p>The player also has an amount of money. At the beginning of each month, rent is due, and each meal costs money. At some point, the player will not be able to afford these things and will be required to take a day job.</p>\r\n        <p>Day jobs range from retail to profession programmer. Each day job affects the player's stats and takes time out of the day that could be spent developing games. A retail job causes the player to lose hope, while a programmer job helps increase the player's Programming Skill.</p>\r\n        <p>The player can also discover Meet-ups where they can make friends, gain hope, and increase skill points by showing off prototypes.</p>\r\n        <p>Eventually, the player will lose all hope and will quit indie game development. However, six months will pass, some of their skills will decay, and they will get back into it, unable to resist their true passion.</p>\r\n        <ul>\r\n            <li><a data-external-link=\"true\" href=\"/content/downloads/dontlosthope-06.25.16.apk\">Download the .apk</a></li>\r\n            <li><a data-external-link=\"true\" href=\"/content/webPlayers/DontLoseHope/\">Play in your Browser</a></li>\r\n        </ul>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceElementalInbalance", this["handlebarsTemplates"]["pieceElementalInbalance"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <div class=\"youtube-container\" data-id=\"nuun4tIeZe8\">\r\n            <div class=\"youtube-play-button\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>Elemental Inbalance</strong> is a Role Playing Combat Game built using the Warcraft 3 engine. This is the tutorial stage that sets up the plot and introduces the player to the controls.</p>\r\n        <p>The player is a summoner who has just begun to learn his magic potential. The player starts in a village where the player can use custom commands to speak with NPCs. Scripted events push the player through the introduction. During the adventure, the player uses creatures summoned by the summoner to attack enemies and interact with objects. Each summoned creature gains experience and learns new abilities over time, giving both power to the summons and new control abilities to the summoner.</p>\r\n\r\n</div>\r\n\r\n<div class=\"content-row\">\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/elemental_ss_01.jpg\"/>\r\n    </div>\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/elemental_ss_02.jpg\"/>\r\n    </div>\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/elemental_ss_03.jpg\"/>\r\n    </div>\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/elemental_ss_04.jpg\"/>\r\n    </div>\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/elemental_ss_05.jpg\"/>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceHorsemanCometh", this["handlebarsTemplates"]["pieceHorsemanCometh"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/hmc_ss01.jpg\"/>\r\n        <img src=\"/content/images/hmc_ss02.jpg\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>The Horseman Cometh</strong> is an Asymmetrical Team-vs-Team First Person Shooter.</p>\r\n        <p>The story: In the later half of the year 2012, Portals to Hell began opening up all around the world. It is said that December 21st of this year is the final day of man. All that stands in the way of an Earth overrun by Hell's minions is the Order of the Secret Scrolls, an international, multi-generational secret society of militaristically trained Monks.</p>\r\n\r\n        <p>Each map has one portal, which starts the game at 50% strength.</p>\r\n        <p>Players are separated into two teams: The Demons, and The Monks.</p>\r\n        <p>The Monks are humans with human-like stats and are equipped with an automatic weapon. The alt fire for that weapon emits a beam, which only links to the Portal in the map, and diminishes its strength. If the Portal's strength diminishes to 0%, the Monks have closed the portal and win the game. The gameplay vibe for the Monk team can be described as a Gauntlet, where they run from their spawn point to the portal while fending off demons.</p>\r\n        <p>The Demons have an increased movement speed and jump height and have temporary flight. Their only weapons are their claws, which they use in melee combat. When they kill a Monk, their victim's soul drops to the ground. The Demons must bring these souls to the Portal to feed it strength. If the Portal's Strength reaches 100%, the Portal is powerful enough to bring in a large army, and the Demons win. The game play environment vibe for the Demon team is summed up as a Jungle Gym, where they attack from above and behind, usually in groups.</p>\r\n    </div>\r\n\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceMtgSealedDeckBuilder", this["handlebarsTemplates"]["pieceMtgSealedDeckBuilder"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/mtgSealedDeckBuilder.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p>The <strong><i>Magic: The Gathering</i> Sealed Deck Builder</strong> is a rich web application that I built using Javascript and JQuery. The application loads XML files saved on the server that contain the list of cards in that specific pool. This was the first large scale application I build in Javascript, and while I wasn't very familiar with the language then, I was still able to complete the project.</p>\r\n        <p>Stores affiliated with Wizards of the Coast's event system can host Prerelease Parties - events that occur about one week before a new set of <i>Magic the Gathering</i> is released. At these events, players are given six unopened booster packs, which they open and use the 84 cards within as a pool to create a deck for play that night. This Sealed Deck Builder application mimics that experience.</p>\r\n        <p>Through a couple team meetings with other members of the DailyMTG staff at Wizards of the Coast, we drafted the basic outline of features and the general UI for the application. I then worked with Tom Jenkot, our team's graphic designer, to further nail down the interface. From there, I built the entire application as a solo project. When the application was completely functional, Toshiko Okumura, another team's graphic designer, built the specific graphic elements into a Photoshop PSD file, which I sliced and exported png files from and implemented into the product.</p>\r\n        <p>Here are a couple samples of the application in action:</p>\r\n        <ul>\r\n            <li><a data-external-link=\"true\" href=\"http://magic.wizards.com/en/articles/archive/sealed-deck-builder-02092012-2012-02-09\"><i>Innistrad</i> / <i>Dark Ascension</i> pool</a></li>\r\n            <li><a data-external-link=\"true\" href=\"http://magic.wizards.com/en/articles/archive/sealed-deck-builder-06212012-2012-06-21\"><i>Avacyn Restored</i> pool</a></li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n";
},"useData":true}));

Handlebars.registerPartial("pieceNsmbCustomLevels", this["handlebarsTemplates"]["pieceNsmbCustomLevels"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n    <div class=\"content-block\">\r\n        <div class=\"youtube-container\" data-id=\"jGmoGbta0SA\">\r\n            <div class=\"youtube-play-button\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <h3>Easy Intro</h3>\r\n        <p>This level is meant to be a \"level 1-1\" type. It introduces one of the new power-ups, and some of the mechanics of the game while being very easy to play through. It is also meant to be easy to speedrun through, like most other 1-1 levels in SMB games.</p>\r\n        <p><strong>In Hindsight</strong>: </p>\r\n        <ul>\r\n            <li>Two of the Star Coins are too obtusely hidden for a 1-1 type level. All three should be very easy to find.</li>\r\n            <li>There a few spots that a little too hard, like the ParaTrooper hole at 0:48.</li>\r\n            <li>I don't like that there is a mini-mushroom obtainable immediately after grabbing a Fire Flower.</li>\r\n            <li>There are some minor graphic issues (The camera pan by the third Star Coin, the use of water in the underground part).</li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"content-row\">\r\n    <div class=\"content-block\">\r\n        <div class=\"youtube-container\" data-id=\"-RDTw90idkk\">\r\n            <div class=\"youtube-play-button\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <h3>Underground Havoc</h3>\r\n        <p>This level is meant to be an underground level about 3/4ths through the game as a near-maze area. My main objective was to have an atmosphere of exploration, and set up some sort of mini-games along the way, such as the \"avoid the Piranha Plants while climbing the vine\" and \"Get that 1-Up in the mini-pipe run.\"</p>\r\n        <p><strong>In Hindsight</strong>: </p>\r\n        <ul>\r\n            <li>this level is way too long, and should be split into two separate, smaller levels.</li>\r\n            <li>A few encounters are a little too unfair - specifically the bullet-bill part.</li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"content-row\">\r\n    <div class=\"content-block\">\r\n        <div class=\"youtube-container\" data-id=\"EYScyLuuEMI\">\r\n            <div class=\"youtube-play-button\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <h3>Sky Shrooms</h3>\r\n        <p>This level is meant to just be a fun athletic type level with tricky jumps and enemy placement.</p>\r\n        <p><strong>In Hindsight</strong>: </p>\r\n        <ul>\r\n            <li>The detour to the Star Coin half-way through the level is a little too long and could have been shortened.</li>\r\n            <li>There are a few blind jumps in the second half of the stage.</li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"content-row\">\r\n    <div class=\"content-block\">\r\n        <div class=\"youtube-container\" data-id=\"yjsGbxa5o4Q\">\r\n            <div class=\"youtube-play-button\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <h3>Sky Ruins</h3>\r\n        <p>The main inspiration for this level was to create a two-tone contrast in atmosphere. The ground is lush, colorful, full of life, and upbeat. The player moves quickly through this area with lots of slides and easy jumping. The Sky Ruins segments are cold, forbidding, colorless, and desolate. The player has to move slowly through these areas, timing their jumps and watching enemy movements.</p>\r\n        <p><strong>In Hindsight</strong>: </p>\r\n        <ul>\r\n            <li>The Invisibility Star mini-game feels out of place in the Sky Ruins section, as it has the exact opposite vibe that the rest of the area is trying to emphasize. Considering I meant for it to feel lifeless, it's ironically easy to earn multiple 1-Ups</li>\r\n            <li>I don't like how the vines that spawn from the blocks eat a tile, but I couldn't think of another way to prevent the player from ground-pounding the block and causing a soft-lock, preventing progress.</li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"content-row\">\r\n    <div class=\"content-block\">\r\n        <div class=\"youtube-container\" data-id=\"2jOzT6VARO8\">\r\n            <div class=\"youtube-play-button\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <h3>Ghost House</h3>\r\n        <p>This is meant to be a standard Ghost House level with tricks and traps, and a maze-like exporation element.</p>\r\n        <p><strong>In Hindsight</strong>: </p>\r\n        <ul>\r\n            <li>It's hard to judge this as a successful/unsuccessful ghost house level because the whole point is to experience being lost and tricked and I already know the path and what to watch out for.</li>\r\n            <li>It's a little too long (speedrunning through it takes 5 minutes). A few of the rooms should be removed.</li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"content-row\">\r\n    <div class=\"content-block\">\r\n        <div class=\"youtube-container\" data-id=\"Mz6HAl2kcTM\">\r\n            <div class=\"youtube-play-button\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <h3>Jungle Temple</h3>\r\n        <p>This level is meant to be spacious, allowing the player a sense of exploration. There are multiple paths and lots of nooks and crannies to explore. I wanted to give Mario sort of an Indiana Jones adventure.</p>\r\n        <p><strong>In Hindsight</strong>: </p>\r\n        <ul>\r\n            <li>I wish I had implemented some switches here and there to make it feel like the player was unlocking the next part of the level, as if they're breaking into the temple.</li>\r\n            <li>The custom tileset is a bit janky looking.</li>\r\n            <li>The end of the level with the flag feels too out of place compared to the rest of the level.</li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"content-row\">\r\n    <div class=\"content-block\">\r\n        <div class=\"youtube-container\" data-id=\"ID6ebkJy7FQ\">\r\n            <div class=\"youtube-play-button\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <h3>Sand Castle</h3>\r\n        <p>This level is a tower in the desert, full of desert-like obstacles. I wanted the player to feel as though they're inside an actual tower reaching far into the sky, and emphasized that with a few sections where the player climbs the tower on the outside of it.</p>\r\n        <p><strong>In Hindsight</strong>: </p>\r\n        <ul>\r\n            <li>There should be a boss at the end of the level, probably either a Bowser Jr or a Bowser.</li>\r\n            <li>The mushroom part at the end feels out of character from the rest of the level and instead should have been a boss room.</li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"content-row\">\r\n    <div class=\"content-block\">\r\n        <div class=\"youtube-container\" data-id=\"P_d7_3h5AhQ\">\r\n            <div class=\"youtube-play-button\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <h3>Pipe Maze</h3>\r\n        <p>Ever since playig World 7 in Super Mario Bros 3, I've loved the idea of a pipe maze level. This is my attempt at one.</p>\r\n        <p><strong>In Hindsight</strong>: </p>\r\n        <ul>\r\n            <li>The underwater secret area is too long for being a side objective.</li>\r\n            <li>The difficulty feels uneven. The second half of the level has far fewer enemies than the first half.</li>\r\n            <li>The player has to play through the level more than once to get everything - something I'm not usually a fan of.</li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n";
},"useData":true}));

Handlebars.registerPartial("pieceNumbers", this["handlebarsTemplates"]["pieceNumbers"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/Numbers.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>Numbers</strong> is a small math prototype.</p>\r\n        <p>Clicking on any cell will add all five numbers, making a new total for that cell and replacing the surrounding cells with new numbers.</p>\r\n        <p>On the left, a pattern of numbers is displayed. The player must match that pattern on the play board. When they do, a new pattern appears and must match the new pattern while not changing the previous one. Every three matches, one pattern is removed and a new pattern is added.</p>\r\n        <ul>\r\n            <li><a data-external-link=\"true\" href=\"/content/webPlayers/Numbers/\">Play in your Browser</a></li>\r\n        </ul>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceOldPortfolio", this["handlebarsTemplates"]["pieceOldPortfolio"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/OldPortfolio.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p>This is what my previous online portfolio looked like.</p>\r\n        <p>I liked it a lot, but it wasn't mobile friendly, had rough navigation, was cumbersome to update, and didn't feature my portfolio pieces clearly enough.</p>\r\n        <p>I modeled, lit, and rendered the 3D assets that make up the background animation in 3D Studio Max.</p>\r\n        <ul>\r\n            <li><a data-external-link=\"true\" href=\"/content/webPlayers/OldPortfolio/\">My old portfolio in action</a></li>\r\n        </ul>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceOutpost", this["handlebarsTemplates"]["pieceOutpost"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/outpost.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>Outpost</strong> is a Threes/2048 type game where the arrow keys move all units at the same time.</p>\r\n        <p>There are two types of units: Workers and Soldiers. Every few turns, a new Monster appears on the board. If the Monster touches a Worker, the Worker dies. If a Soldier touches a Monster, the Monster dies. If a Monster touches a house, the unit that lives in that house also dies. Monsters always move in the opposite direction as the player.</p>\r\n        <p>Workers gather resources by pressing into them.</p>\r\n        <p>2 Wood + 1 Stone = Worker House</p>\r\n        <p>1 Wood + 2 Stone = Soldier Barracks</p>\r\n        <p>The game ends when all workers have been killed.</p>\r\n        <p>The goal is to see how many Monsters the player can kill or how large of a population the player can reach before getting game over.</p>\r\n        <ul>\r\n            <li><a data-external-link=\"true\" href=\"/content/webPlayers/Outpost/\">Play in your Browser</a></li>\r\n        </ul>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceSierra7", this["handlebarsTemplates"]["pieceSierra7"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/sierra7.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>Sierra 7</strong> is a Top-Down Adventure Shooter.</p>\r\n        <p>The main hook to combat is that there are five types of weapons and that the player can make a unique weapon by combining two of them, and can upgrade each weapon type with currency. The player also has a hookshot that they can use to cross rivers and traverse the area quickly.</p>\r\n        <p>The weapon types are:</p>\r\n        <ul>\r\n            <li><strong>Bouncer</strong>: The projectile bounces off walls. Upgrades will increase the number of times it bounces.</li>\r\n            <li><strong>Exploder</strong>: The projectile will explode causing splash damage when it hits an enemy ship. Upgrades increase explosion radius.</li>\r\n            <li><strong>Spread</strong>: Each time the player fires, multiple projectiles are emitted. Upgrades increase the number of projectiles.</li>\r\n            <li><strong>Missile</strong>: Missiles deal extra damage to enemies. Upgrades increase the amount of damage dealt.</li>\r\n            <li><strong>Homing</strong>: Projectiles home in on enemies. Upgrades increase the projectile's turn radius and accuracy.</li>\r\n        </ul>\r\n        <p>There are several types of enemies implemented:</p>\r\n        <ul>\r\n            <li><strong>\"Snake\"</strong>: Four discs that travel together in a line. It changes direction often.</li>\r\n            <li><strong>\"Hummingbird\"</strong>: A fast enemy that zeroes in on the player's position and tries to collide with it. When it is destroyed, it causes a large explosion that deals major damage.</li>\r\n            <li><strong>\"Snail\"</strong>: It randomly travels around the environment dropping puddles of goo. When the player collides with a goo spot, the player's vision is obscured.</li>\r\n            <li><strong>\"Elephant\"</strong>: It travels towards the player firing a projectile. When it is within a certain distance, it starts rotating around the player firing at it. It has a large amount of health and often blocks the player's shots from hitting other enemies.</li>\r\n            <li><strong>\"Squirrel\"</strong>: It wanders around the environment firing its primary weapon from time to time.</li>\r\n            <li><strong>\"Armadillo\"</strong>: It wanders around the environment, stopping occasionally and spinning in place. While it is spinning, the player's projectiles are reflected back.</li>\r\n            <li><strong>\"Hornet\"</strong>: It travels quickly and bounces off walls, stopping occasionally to fire two long laser beams, creating a damage wall.</li>\r\n        </ul>\r\n        <p>I hit a writer's block in figuring what the ultimate objective of the game was and how the player would go about doing it. I had originally envisioned this to be sort of a Sandbox Metroidvania. All of the ideas I had to take this game forward suffered from expanding feature-creep, and I wasn't happy with it just being an endless shooter.</p>\r\n\r\n\r\n        <ul>\r\n            <li><a data-external-link=\"true\" href=\"/content/webPlayers/Sierra7/\">Play in your Browser</a></li>\r\n        </ul>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceSlideyBlocks", this["handlebarsTemplates"]["pieceSlideyBlocks"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/slideyBlocks.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>Slidey Blocks</strong> is a mobile game I developed using Unity3D.</p>\r\n        <p>The objective is to slide rows and columns of blocks to match the play board to the solution board.</p>\r\n        <p>Features:</p>\r\n        <ul>\r\n            <li>Blocks wrap around the edges and skip over holes in the board, and there are Stopper Blocks that prevent sliding.</li>\r\n            <li>Players can challenge themselves to solve each puzzle within an allotted number of moves and earn Stars.</li>\r\n            <li>Players can also compete on Leaderboards and earn Achievements.</li>\r\n        </ul>\r\n\r\n        <p>Download on <a data-external-link=\"true\" href=\"https://play.google.com/store/apps/details?id=com.StormGarden.SlideyBlocks\">Google Play Store</a> or <a data-external-link=\"true\" href=\"https://itunes.apple.com/us/app/slidey-blocks/id1114410909\">iTunes App Store</a></p>\r\n    </div>\r\n\r\n    <div class=\"content-block\"><img src=\"/content/images/slideyBlocks-ss1.png\"/></div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceSuperMarioGalaxyRenders", this["handlebarsTemplates"]["pieceSuperMarioGalaxyRenders"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n    <div class=\"content-block\">\r\n        <p>These pieces were done for <a data-external-link=\"true\" href=\"https://www.amazon.com/Super-Mario-Galaxy-Prima-Official/dp/0761556435?ie=UTF8&*Version*=1&*entries*=0\">Prima's Official Strategy Guide for Super Mario Galaxy</a>.</p>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"content-row\">\r\n    <img class=\"content-block\" src=\"/content/images/mario_render1.jpg\"/>\r\n    <img class=\"content-block\" src=\"/content/images/mario_render2.jpg\"/>\r\n    <img class=\"content-block\" src=\"/content/images/mario_render3.jpg\"/>\r\n    <img class=\"content-block\" src=\"/content/images/mario_render4.jpg\"/>\r\n    <img class=\"content-block\" src=\"/content/images/mario_render5.jpg\"/>\r\n    <img class=\"content-block\" src=\"/content/images/mario_render6.jpg\"/>\r\n    <img class=\"content-block\" src=\"/content/images/mario_render7.jpg\"/>\r\n    <img class=\"content-block\" src=\"/content/images/mario_render8.jpg\"/>\r\n    <img class=\"content-block\" src=\"/content/images/mario_render9.jpg\"/>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceSuperPaperMarioAssets", this["handlebarsTemplates"]["pieceSuperPaperMarioAssets"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"content-row\">\r\n    <div class=\"content-block\">\r\n        <p>These reusable Illustrator assets were made for creating maps in the <a data-external-link=\"true\" href=\"https://www.amazon.com/Official-Nintendo-Super-Paper-Players/dp/1598120131/ref=pd_sim_14_1?ie=UTF8&dpID=61FCdHJ8abL&dpSrc=sims&preST=_AC_UL320_SR250%2C320_&refRID=E5J9TCFT0Y771572S072\">Official Nintendo Super Paper Mario Player's Guide</a> by Nintendo Power.</p>\r\n    </div>\r\n</div>\r\n<div class=\"content-row\">\r\n    <img class=\"content-block\" src=\"/content/images/SPM_Assets.jpg\"/>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceTheLogicDetective", this["handlebarsTemplates"]["pieceTheLogicDetective"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<div class=\"content-row\">\r\n    <div class=\"content-block\">\r\n        <img class=\"content-block\" src=\"/content/images/theLogicDetective.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>The Logic Detective</strong> is an experiment fusing classic logic puzzles with an RPG interface. Instead of just being given a list of clues to solve the puzzle, the player must talk with NPCs and do quests to obtain those clues.</p>\r\n        <p>The final version would have had an interactive board like the one shown below that the player can use to solve the mystery.</p>\r\n        <p>The story for the prototype is that the detective starts his career as a local spots newspaper journalist and has to gather information to write his story.</p>\r\n        <ul>\r\n            <li>Download the <a data-external-link=\"true\" href=\"/content/downloads/TheLogicDetective_Windows.zip\">Windows</a> or <a data-external-link=\"true\" href=\"/content/downloads/TheLogicDetective_MacOS.zip\">MacOS</a> version</li>\r\n            <li>Play the <a data-external-link=\"true\" href=\"/content/webPlayers/TheLogicDetective/\">WebGL</a> version in your browser</li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <img class=\"content-block\" src=\"/content/images/theLogicDetective_board.png\"/>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceToLoseTheMoon", this["handlebarsTemplates"]["pieceToLoseTheMoon"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <div class=\"youtube-container\" data-id=\"AvpYtzAr_1w\">\r\n            <div class=\"youtube-play-button\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>To Lose the Moon</strong> is an experiment that attempted to combine the Point-and-Click Graphic Adventure genre with the Turn Based Strategy genre.</p>\r\n        <p>The player moves tied to a grid and can click on NPCs and certain objects to interact with them. The combat engine was never developed, but it would have been very similar to the one in another of my prototypes, ActionTBS.</p>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("pieceZombieEscape", this["handlebarsTemplates"]["pieceZombieEscape"] = Handlebars.template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "\r\n<div class=\"content-row\">\r\n\r\n    <div class=\"content-block\">\r\n        <img src=\"/content/images/zombieEscape.png\"/>\r\n    </div>\r\n\r\n    <div class=\"content-block\">\r\n        <p><strong>Zombie Escape</strong> a Roguelike Survival Text Adventure where the player assumes the role of an ordinary citizen during a zombie outbreak. The current state allows players to move from room to room, search rooms, and pick up items. Planned for future updates is a combat engine, more actions for items (like break, push against door, etc), stat-based rolls, random events, sleeping, eating, drinking, combining items, and more.</p>\r\n        <p>This was the first project I did using AngularJS. I stopped working on it as the scope of the project increased and architecture decisions I made early on started becoming too cumbersome to work with. I learned a lot about AngularJS with this project and I have plans to restart it using better patterns. One major mistake I found was that I mixed responsibilities of views, controllers, and factories too much. A rebuild of the project would be done with stricter rules about what logic belongs in what modules.</p>\r\n        <ul>\r\n            <li><a data-external-link=\"true\" href=\"/content/webPlayers/ZombieEscape/\">Play in your Browser</a></li>\r\n        </ul>\r\n    </div>\r\n</div>";
},"useData":true}));

Handlebars.registerPartial("siteNavView", this["handlebarsTemplates"]["siteNavView"] = Handlebars.template({"1":function(container,depth0,helpers,partials,data) {
    var stack1, alias1=container.lambda, alias2=container.escapeExpression;

  return "<li><a href=\""
    + alias2(alias1((depth0 != null ? depth0.link : depth0), depth0))
    + "\" data-nav-item-index=\""
    + alias2(alias1((data && data.index), depth0))
    + "\" data-router-nav=\"true\" class=\""
    + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.isSelected : depth0),{"name":"if","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\"><i class=\"fa "
    + alias2(alias1((depth0 != null ? depth0.icon : depth0), depth0))
    + "\"></i>"
    + alias2(alias1((depth0 != null ? depth0.title : depth0), depth0))
    + "</a></li>";
},"2":function(container,depth0,helpers,partials,data) {
    return "selected";
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<ul>\r\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : {},(depth0 != null ? depth0.navItems : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\r\n</ul>";
},"useData":true}));

return this["handlebarsTemplates"];

});